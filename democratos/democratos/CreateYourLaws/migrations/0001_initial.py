# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-27 06:38
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodeBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('position', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('updated', models.BooleanField(default='True')),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Last update date')),
                ('block', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='CreateYourLaws.CodeBlock')),
            ],
        ),
        migrations.CreateModel(
            name='Disclaim',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.IntegerField(default=0)),
                ('down', models.IntegerField(default=0)),
                ('approval_factor', models.FloatField(default=0)),
                ('approval_ratio', models.FloatField(default=0)),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('text_dis', ckeditor.fields.RichTextField()),
                ('nb_exp', models.IntegerField(default=0)),
                ('nb_q', models.IntegerField(default=0)),
                ('nb_dis', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-approval_factor', '-update'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Explaination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.IntegerField(default=0)),
                ('down', models.IntegerField(default=0)),
                ('approval_factor', models.FloatField(default=0)),
                ('approval_ratio', models.FloatField(default=0)),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('text_exp', ckeditor.fields.RichTextField()),
                ('nb_exp', models.IntegerField(default=0)),
                ('nb_q', models.IntegerField(default=0)),
                ('nb_dis', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-approval_factor', '-update'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LawArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.IntegerField(default=0)),
                ('down', models.IntegerField(default=0)),
                ('approval_factor', models.FloatField(default=0)),
                ('approval_ratio', models.FloatField(default=0)),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('url', models.URLField(blank=True, max_length=1000)),
                ('text_law', ckeditor.fields.RichTextField()),
                ('updated', models.BooleanField(default='True')),
                ('nb_exp', models.IntegerField(default=0)),
                ('nb_q', models.IntegerField(default=0)),
                ('nb_posop', models.IntegerField(default=0)),
                ('nb_negop', models.IntegerField(default=0)),
                ('nb_prop', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-approval_factor', '-update'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LawCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('updated', models.BooleanField(default='True')),
                ('lastupdate', models.DateTimeField(auto_now=True, verbose_name='Last update date')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approve', models.NullBooleanField()),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='Opinion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.IntegerField(default=0)),
                ('down', models.IntegerField(default=0)),
                ('approval_factor', models.FloatField(default=0)),
                ('approval_ratio', models.FloatField(default=0)),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('text_op', ckeditor.fields.RichTextField()),
                ('positive', models.BooleanField()),
                ('nb_exp', models.IntegerField(default=0)),
                ('nb_q', models.IntegerField(default=0)),
                ('nb_dis', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-approval_factor', '-update'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Proposition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.IntegerField(default=0)),
                ('down', models.IntegerField(default=0)),
                ('approval_factor', models.FloatField(default=0)),
                ('approval_ratio', models.FloatField(default=0)),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('text_prop', ckeditor.fields.RichTextField()),
                ('nb_exp', models.IntegerField(default=0)),
                ('nb_q', models.IntegerField(default=0)),
                ('nb_posop', models.IntegerField(default=0)),
                ('nb_negop', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-approval_factor', '-update'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up', models.IntegerField(default=0)),
                ('down', models.IntegerField(default=0)),
                ('approval_factor', models.FloatField(default=0)),
                ('approval_ratio', models.FloatField(default=0)),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('update', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=150, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('text_q', ckeditor.fields.RichTextField()),
                ('nb_exp', models.IntegerField(default=0)),
                ('nb_q', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-approval_factor', '-update'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CYL_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_of_birth', models.DateField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='autor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='question',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='proposition',
            name='autor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='proposition',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='proposition',
            name='law_article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CreateYourLaws.LawArticle'),
        ),
        migrations.AddField(
            model_name='opinion',
            name='autor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='opinion',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='note',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lawarticle',
            name='autor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lawarticle',
            name='block',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='CreateYourLaws.CodeBlock'),
        ),
        migrations.AddField(
            model_name='lawarticle',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='lawarticle',
            name='law_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CreateYourLaws.LawCode'),
        ),
        migrations.AddField(
            model_name='explaination',
            name='autor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='explaination',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='disclaim',
            name='autor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='disclaim',
            name='content_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='codeblock',
            name='law_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CreateYourLaws.LawCode'),
        ),
    ]
